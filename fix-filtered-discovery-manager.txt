// Find this section in filtered-discovery-manager.ts around line 170-200
// In the handleTokenDiscovery method, after getting market data

// Extract pump.fun specific metadata
const metadata = sanitizedToken.metadata || {};
const pumpfunData: any = {};

// Check various possible locations for pump.fun data
if (sanitizedToken.platform === 'pumpfun') {
  // Extract from metadata
  pumpfunData.creator = metadata.creator || metadata.traderPublicKey;
  pumpfunData.bonding_curve = metadata.bondingCurve || metadata.bonding_curve;
  pumpfunData.associated_bonding_curve = metadata.associatedBondingCurve || metadata.associated_bonding_curve;
  pumpfunData.creator_vault = metadata.creatorVault || metadata.creator_vault;
  pumpfunData.initial_price_sol = metadata.initialPrice || metadata.initial_price;
  pumpfunData.initial_liquidity_sol = metadata.initialSolAmount || metadata.initial_liquidity;
  pumpfunData.is_pump_fun = true;
  
  // Calculate curve progress if we have market cap
  if (marketData.marketCap > 0) {
    pumpfunData.curve_progress = Math.min(marketData.marketCap / 69420, 1.0);
    pumpfunData.distance_to_graduation = Math.max(69420 - marketData.marketCap, 0);
  }
}

// Then in the db insert, add these fields:
await db('tokens').insert({
  address: sanitizedToken.address,
  symbol: sanitizedToken.symbol || 'UNKNOWN',
  name: sanitizedToken.name || 'Unknown Token',
  platform: sanitizedToken.platform,
  created_at: sanitizedToken.createdAt,
  discovered_at: new Date(),
  // Market data
  market_cap: marketData.marketCap,
  current_price: marketData.price,
  liquidity: marketData.liquidity,
  volume_24h: marketData.volume24h,
  // Add pump.fun specific fields
  ...pumpfunData,
  // Store full metadata
  raw_data: JSON.stringify({
    ...sanitizedToken.metadata,
    marketData,
    passedFilter: this.activeFilterName,
    pumpfunLiquidityCalculated: sanitizedToken.platform === 'pumpfun' && marketData.liquidity > 0
  }),
  // Status fields
  status: 'active',
  analysis_status: 'PENDING'
}).onConflict('address').ignore();
